{"points":[{"id":"n0","name":"字符集","desc":"允许的字符的集合"},{"id":"n1","name":"单行注释","desc":"用来注释单行代码的注释方式"},{"id":"n2","name":"多行注释","desc":"用来注释多行代码的注释方式"},{"id":"n3","name":"标识符","desc":"对变量和函数进行的命名"},{"id":"n4","name":"保留字","desc":"一些被定义为程序本身关键字的标识符，不能再被用来作为标识符"},{"id":"n5","name":"句尾可选的分号","desc":"语句之间需要用分号隔开，但是如果语句独占一行，可以省略掉分号"},{"id":"n6","name":"直接量","desc":"字面直接量，可以直接赋值给变量"},{"id":"n7","name":"语句","desc":"一整句代码，用分号隔开的就是一个完整的语句"},{"id":"n8","name":"注释","desc":"在代码中穿插的，不会作为代码执行的说明性的文字"},{"id":"n9","name":"词法结构","desc":"语言的基础性规则，描述如何使用语言来编程"},{"id":"n10","name":"词法分析","desc":"将程序的源代码序列转换成单词序列的过程"},{"id":"n11","name":"语法树","desc":"源代码的抽象语法结构的树状表现形式"},{"id":"n12","name":"编译原理","desc":"将高级程序设计语言变换成计算机硬件所能识别的机器语言"},{"id":"n13","name":"整数","desc":"程序中的整数的表示方式"},{"id":"n14","name":"浮点数","desc":"程序中的浮点数的表示方式"},{"id":"n15","name":"字符串","desc":"程序中的字符串的表示方式"},{"id":"n16","name":"转义字符","desc":"以反斜杠开头的有特殊含义的字符"},{"id":"n17","name":"布尔值","desc":"程序中的布尔值的表示方式"},{"id":"n18","name":"null","desc":"程序中的空值的字面量"},{"id":"n19","name":"undefined","desc":"程序中的没有定义值的字面量"},{"id":"n20","name":"值","desc":"程序中的变量所表示的值"},{"id":"n21","name":"一般对象","desc":"程序中的对象类型"},{"id":"n22","name":"全局对象","desc":"程序内置的全局定义的对象，可以直接使用"},{"id":"n23","name":"包装对象","desc":"对象是一种复合值"},{"id":"n24","name":"全局属性","desc":"程序内置的全局定义的变量，可以直接使用"},{"id":"n25","name":"全局函数","desc":"程序内置的全局定义的函数，可以直接使用"},{"id":"n26","name":"全局构造函数","desc":"程序内置的全局定义的构造函数，可以直接使用"},{"id":"n27","name":"变量","desc":"程序中用来存储值的符号"},{"id":"n28","name":"变量声明","desc":"在程序中声明一个变量"},{"id":"n29","name":"变量作用域","desc":"程序源代码中定义这个变量的区域"},{"id":"n30","name":"表达式","desc":"程序中的一个短语，常量和变量是最简单的表达式"},{"id":"n31","name":"运算符","desc":"用来进行运算的一些关键字"},{"id":"n32","name":"合法程序语句","desc":"合法的程序语句"},{"id":"n33","name":"四则运算","desc":"加减乘除运算"},{"id":"n34","name":"关系表达式","desc":"用关系运算符测试两侧值之间关系的表达式"},{"id":"n35","name":"逻辑表达式","desc":"用逻辑运算符对两侧值进行布尔算数运算的表达式"},{"id":"n36","name":"赋值表达式","desc":"用赋值运算符把右侧值赋值给左侧变量的表达式"},{"id":"n37","name":"三元条件运算符 ? :","desc":"test ? expression1 : expression2，如果 test 是 true, 返回 expression1，否则返回 expression2"},{"id":"n38","name":"特殊运算符","desc":"一些特殊的运算符"},{"id":"n39","name":"typeof","desc":"获取变量的类型的运算符"},{"id":"n40","name":"delete","desc":"删除变量的值的运算符"},{"id":"n41","name":"void","desc":"计算表达式的值，并返回 undefined 的运算符"},{"id":"n42","name":"条件语句","desc":"If...Else 语句"},{"id":"n43","name":"循环结构","desc":"在一定条件下反复执行某段程序的流程结构语句"},{"id":"n44","name":"跳转结构","desc":"在一定条件下从程序的一个点跳转到另一个点的流程结构语句"},{"id":"n45","name":"使用对象","desc":"在程序中使用对象"},{"id":"n46","name":"对象操作","desc":"在程序中对对象进行操作"},{"id":"n47","name":"创建对象","desc":"在程序中创建对象的语法形式"},{"id":"n48","name":"对象属性的一般操作","desc":"在程序中可以对对象中的键值对做一些增删改查操作"},{"id":"n49","name":"删除属性","desc":"在程序中可以删除对象中的某个键值对"},{"id":"n50","name":"检测属性","desc":"在程序中检测对象中的某个键值对的信息"},{"id":"n51","name":"枚举属性 for...in","desc":"在程序中遍历对象中的键值对"},{"id":"n52","name":"属性取值","desc":"在程序中取出对象中的某个键对应的值"},{"id":"n53","name":"属性赋值","desc":"在程序中给对象中的某个键赋值"},{"id":"n54","name":"对象属性的高级操作","desc":"在程序中可以对对象中的键值对做一些高级操作"},{"id":"n55","name":"get","desc":"在程序中获取对象属性"},{"id":"n56","name":"set","desc":"在程序中设置对象属性的值"},{"id":"n57","name":"可写性，可枚举性，可配置性定义","desc":"对象属性的三个特性"},{"id":"n58","name":"对象序列化","desc":"将对象的状态信息转换为可以存储或传输的形式的过程"},{"id":"n59","name":"JSON概念","desc":"JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式"},{"id":"n60","name":"对象通用方法 - 从Object继承","desc":"所有对象都会从Object继承方法"},{"id":"n61","name":"数组","desc":"程序中的数组的表示方式"},{"id":"n62","name":"创建数组","desc":"在程序中创建数组的语法形式"},{"id":"n63","name":"数组长度","desc":"数组中包含的元素的个数"},{"id":"n64","name":"数组元素读写","desc":"在程序中对数组中的元素进行读写操作"},{"id":"n65","name":"数组元素增删","desc":"在程序中对数组中的元素进行增删操作"},{"id":"n66","name":"数组遍历","desc":"在程序中遍历数组中的元素"},{"id":"n67","name":"多维数组","desc":"数组中的元素是数组类型的数组"},{"id":"n68","name":"数组基础方法","desc":"数组对象上的基础方法"},{"id":"n69","name":"数组ES5高级方法","desc":"ES5规范中给数组对象增加了一些高级方法"},{"id":"n70","name":"数组类型","desc":"数组类型的对象"},{"id":"n71","name":"数组操作","desc":"在程序中对数组进行操作"},{"id":"n72","name":"函数","desc":"包裹在花括号中的代码块，执行时传入参数，返回计算后的值"},{"id":"n73","name":"函数的定义","desc":"在程序中定义函数的方式"},{"id":"n74","name":"函数的参数","desc":"定义函数时，指定的函数接收的输入参数"},{"id":"n75","name":"函数的调用","desc":"通过 函数名(实际输入的参数) 的形式运行函数"},{"id":"n76","name":"作为值的函数","desc":"在程序中可以用一个变量来存储一个函数"},{"id":"n77","name":"作为命名空间的函数","desc":"(function(arg){代码})(arg) 这种形式的函数"},{"id":"n78","name":"闭包","desc":"包含了自由（未绑定到特定对象）变量的代码块；这些变量不是在这个代码块内或者任何全局上下文中定义的，而是在定义代码块的环境中定义（局部变量）"},{"id":"n79","name":"函数的属性，方法，构造函数","desc":"函数是特殊类型的对象，它可以有属性，方法，也可以作为构造函数"},{"id":"n80","name":"类与构造函数","desc":"声明一个类需要先声明一个构造函数"},{"id":"n81","name":"类与原型","desc":"所有对象都从同一个原型对象上继承属性"},{"id":"n82","name":"类的定义","desc":"在程序中定义一个类的方式"},{"id":"n83","name":"类与类型","desc":"用 typeof 可以获取一个对象的类型"},{"id":"n84","name":"子类","desc":"类A继承自类B，类A就是类B的子类"},{"id":"n85","name":"类与对象","desc":"对象是类的实例化"},{"id":"n86","name":"模块组织","desc":"代码的模块化组织方式"},{"id":"n87","name":"ES5类相关概念","desc":"ES5规范给类增加了一些高级操作"},{"id":"n88","name":"类的综合使用","desc":"对类的综合使用"},{"id":"n89","name":"正则表达式","desc":"使用单个字符串来描述、匹配一系列符合某个句法规则的字符串"},{"id":"n90","name":"模式匹配","desc":"正则表达式有几种匹配模式"},{"id":"n91","name":"RegExp对象","desc":"执行正则表达式的对象"},{"id":"n92","name":"正则表达式高级技巧","desc":"正则表达式高级技巧"}],"edges":[{"parent":"n1","child":"n8"},{"parent":"n2","child":"n8"},{"parent":"n8","child":"n7"},{"parent":"n5","child":"n7"},{"parent":"n3","child":"n7"},{"parent":"n4","child":"n7"},{"parent":"n0","child":"n9"},{"parent":"n9","child":"n10"},{"parent":"n10","child":"n11"},{"parent":"n12","child":"n11"},{"parent":"n15","child":"n16"},{"parent":"n19","child":"n20"},{"parent":"n17","child":"n20"},{"parent":"n16","child":"n20"},{"parent":"n18","child":"n20"},{"parent":"n13","child":"n20"},{"parent":"n14","child":"n20"},{"parent":"n20","child":"n6"},{"parent":"n6","child":"n9"},{"parent":"n7","child":"n9"},{"parent":"n23","child":"n21"},{"parent":"n24","child":"n21"},{"parent":"n25","child":"n21"},{"parent":"n22","child":"n21"},{"parent":"n26","child":"n21"},{"parent":"n28","child":"n27"},{"parent":"n29","child":"n27"},{"parent":"n20","child":"n30"},{"parent":"n21","child":"n30"},{"parent":"n27","child":"n30"},{"parent":"n31","child":"n30"},{"parent":"n33","child":"n31"},{"parent":"n34","child":"n31"},{"parent":"n35","child":"n31"},{"parent":"n36","child":"n31"},{"parent":"n38","child":"n35"},{"parent":"n37","child":"n38"},{"parent":"n39","child":"n38"},{"parent":"n40","child":"n38"},{"parent":"n41","child":"n38"},{"parent":"n30","child":"n32"},{"parent":"n42","child":"n32"},{"parent":"n43","child":"n32"},{"parent":"n44","child":"n32"},{"parent":"n21","child":"n45"},{"parent":"n27","child":"n46"},{"parent":"n46","child":"n45"},{"parent":"n47","child":"n46"},{"parent":"n48","child":"n46"},{"parent":"n49","child":"n48"},{"parent":"n51","child":"n48"},{"parent":"n50","child":"n48"},{"parent":"n53","child":"n48"},{"parent":"n52","child":"n48"},{"parent":"n57","child":"n54"},{"parent":"n55","child":"n54"},{"parent":"n56","child":"n54"},{"parent":"n54","child":"n46"},{"parent":"n58","child":"n46"},{"parent":"n59","child":"n58"},{"parent":"n60","child":"n46"},{"parent":"n62","child":"n63"},{"parent":"n62","child":"n64"},{"parent":"n64","child":"n65"},{"parent":"n64","child":"n66"},{"parent":"n64","child":"n67"},{"parent":"n63","child":"n61"},{"parent":"n66","child":"n61"},{"parent":"n67","child":"n61"},{"parent":"n65","child":"n61"},{"parent":"n61","child":"n68"},{"parent":"n61","child":"n69"},{"parent":"n61","child":"n70"},{"parent":"n70","child":"n71"},{"parent":"n68","child":"n71"},{"parent":"n69","child":"n71"},{"parent":"n71","child":"n72"},{"parent":"n32","child":"n72"},{"parent":"n45","child":"n72"},{"parent":"n72","child":"n73"},{"parent":"n73","child":"n74"},{"parent":"n74","child":"n75"},{"parent":"n75","child":"n76"},{"parent":"n76","child":"n78"},{"parent":"n77","child":"n78"},{"parent":"n76","child":"n79"},{"parent":"n79","child":"n80"},{"parent":"n45","child":"n81"},{"parent":"n80","child":"n82"},{"parent":"n81","child":"n82"},{"parent":"n82","child":"n85"},{"parent":"n85","child":"n86"},{"parent":"n85","child":"n83"},{"parent":"n85","child":"n84"},{"parent":"n85","child":"n87"},{"parent":"n87","child":"n88"},{"parent":"n86","child":"n88"},{"parent":"n83","child":"n88"},{"parent":"n16","child":"n89"},{"parent":"n72","child":"n89"},{"parent":"n89","child":"n90"},{"parent":"n89","child":"n91"},{"parent":"n90","child":"n92"},{"parent":"n91","child":"n92"}]}